pipeline {
    agent {
        docker {
            image 'node:18'  // Official Node.js 18 image
            args '-u root'   // Run as root to avoid permission issues
            reuseNode true   // Reuse the workspace
        }
    }
    
    environment {
        CI = 'true'  // Set CI environment variable
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/SnehithJothiShiju/8.2CDevSecOps.git'
                    ]]
                ])
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'npm test || true'  // Continue even if tests fail
            }
        }

        stage('Generate Coverage Report') {
            steps {
                sh 'npm run coverage || true'  // Continue if coverage fails
            }
        }

        stage('NPM Audit (Security Scan)') {
            steps {
                sh 'npm audit --audit-level=moderate || true'  // Continue if audit fails
            }
        }
    }

    post {
        always {
            echo "Pipeline execution completed"
            // Add cleanup steps if needed
        }
        success {
            echo "Pipeline succeeded!"
            // Add success notifications
        }
        failure {
            echo "Pipeline failed!"
            // Add failure notifications
        }
    }
}