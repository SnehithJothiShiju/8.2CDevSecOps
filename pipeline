pipeline {
    agent any
     environment {
        SONAR_HOST_URL = 'https://sonarcloud.io'
        SONAR_PROJECT_KEY = 'SnehithJothiShiju_8.2CDevSecOps'
        SONAR_ORGANIZATION = 'SnehithJothiShiju'
    }
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/your_github_username/8.2CDevSecOps.git'
            }
        }
        
        stage('Install Dependencies') {
            steps {
                bat 'npm install'
            }
        }
        
        stage('Run Tests') {
            steps {
                bat 'npm test || exit 0'  // Allows pipeline to continue despite test failures
            }
        }
        
        stage('Generate Coverage Report') {
            steps {
                // Ensure coverage report exists
                bat 'npm run coverage || exit 0'
            }
        }
        stage('SonarCloud Analysis') {
    steps {
        withCredentials([string(credentialsId: 'SONAR_TOKEN', variable: 'SONAR_TOKEN')]) {
            bat '''
            curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-windows.zip
            powershell -Command "Expand-Archive -Path sonar-scanner.zip -DestinationPath ."
            set PATH=%CD%\\sonar-scanner-5.0.1.3006-windows\\bin;%PATH%
            sonar-scanner ^
              -Dsonar.projectKey=%SONAR_PROJECT_KEY% ^
              -Dsonar.organization=%SONAR_ORGANIZATION% ^
              -Dsonar.sources=. ^
              -Dsonar.host.url=%SONAR_HOST_URL% ^
              -Dsonar.login=%SONAR_TOKEN% ^
              -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            '''
        }
    }
}
        
        stage('NPM Audit (Security Scan)') {
            steps {
                bat 'npm audit || exit 0'  // This will show known CVEs in the output
            }
        }
    }
}